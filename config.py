#coding=utf-8
__author__ = 'majik'

mode = {
    '--shape-id-separator'        :   '',             #Separator for traversing a directory structure into a shape ID        [default: "--"]
    '--shape-id-generator'        :   '',             #ID generation callback [via CLI only template strings]                [default: "%s"]
    '--shape-id-pseudo'           :   '',             #Whitespace replacement string for shape IDs                           [default: "_"]
    '--shape-dim-width'           :   '',             #Maximum shape width in pixels                                         [default: 2000]
    '--shape-dim-height'          :   '',             #Maximum shape height in pixels                                        [default: 2000]
    '--shape-dim-precision'       :   '',             #Precision (decimal places) for dimension calculations                 [default: 2]
    '--shape-dim-attributes'      :   '',             #Whether to add width and height attributes to the shapes              [default: false]
    '--shape-spacing-padding'     :   '',             #Padding around shape (up to 4 x comma-separated)                      [default: "0,0,0,0"]
    '--shape-spacing-box'         :   '',             #Box sizing strategy ("content" or "padding")                          [default: "content"]
    '--shape-meta'                :   '',             #Path to YAML file with meta information
    '--shape-align'               :   '',             #Path to YAML file with alignment information
    '--ims, --shape-dest'         :   '',             #Path to output directory for intermediate SVG files
    '--shape-transform'           :   '',             #Comma-separated list of predefined transformers (see docs)            [default: "svgo"]
    '--shape-transform-*'         :   '',             #External JSON config files for named transformers
    '--svg-xmldecl'               :   '',             #Whether to include an XML declaration in SVG files                    [default: true]
    '--svg-doctype'               :   '',             #Whether to include a doctype declaration in SVG files                 [default: true]
    '--svg-namespace-ids'         :   '',             #Whether to apply ID namespacing to the sprite                         [default: true]
    '--svg-dimattrs'              :   '',             #Whether to add width and height attributes to the sprite              [default: true]
    '--css'                       :   'true',         #Activates the «css» mode                                              [default: false]
    '--css-dest'                  :   '',             #Mode specific output directory                                        [default: "css"]
    '--cl, --css-layout'          :   '',             #Sprite layout ("vertical"/"horizontal"/"diagonal"/"packed")           [default: "packed"]
    '--css-common'                :   '',             #Common CSS rule selector for all shapes                               [default: null]
    '--css-mixin'                 :   '',             #Preprocessor mixin name with properties for all shapes                [default: null]
    '--css-prefix'                :   '',             #CSS selector prefix for all shapes (including placeholders)           [default: ".svg-%s"]
    '--css-dimensions'            :   '',             #CSS selector suffix for shape dimension rules ("" for inline)         [default: "-dims"]
    '--cs, --css-sprite'          :   '',             #Sprite path and filename (relative to --mode-css-dest)                [default: "svg/sprite.css.svg"]
    '--css-bust'                  :   '',             #Enable cache busting                                                  [default: true]
    '--ccss, --css-render-css'    :   '',             #Whether to render a CSS stylesheet                                    [default: false]
    '--css-render-css-template'   :   '',             #CSS stylesheet Mustache template (relative to svg-sprite basedir)     [default: "tmpl/css/sprite.css"]
    '--css-render-css-dest'       :   '',             #CSS stylesheet destination (relative to the --mode-css-dest)          [default: "sprite.css"]
    '--cscss, --css-render-scss'  :   '',             #Whether to render a Sass stylesheet (SCSS)                            [default: false]
    '--css-render-scss-template'  :   '',             #Sass stylesheet Mustache template (relative to svg-sprite basedir)    [default: "tmpl/css/sprite.scss"]
    '--css-render-scss-dest'      :   '',             #Sass stylesheet destination (relative to the --mode-css-dest)         [default: "sprite.scss"]
    '--cless, --css-render-less'  :   '',             #Whether to render a LESS stylesheet                                   [default: false]
    '--css-render-less-template'  :   '',             #LESS stylesheet Mustache template (relative to svg-sprite basedir)    [default: "tmpl/css/sprite.less"]
    '--css-render-less-dest'      :   '',             #LESS stylesheet destination (relative to the --mode-css-dest)         [default: "sprite.less"]
    '--cstyl, --css-render-styl'  :   '',             #Whether to render a Stylus stylesheet                                 [default: false]
    '--css-render-styl-template'  :   '',             #Stylus stylesheet Mustache template (relative to svg-sprite basedir)  [default: "tmpl/css/sprite.styl"]
    '--css-render-styl-dest'      :   '',             #styl stylesheet destination (relative to the --mode-css-dest)         [default: "sprite.styl"]
    '--css-render-*'              :   '',             #Custom output renderings
    '--css-render-*-template'     :   '',             #Custom output Mustache template (relative to svg-sprite basedir)
    '--css-render-*-dest'         :   '',             #Custom output destination (relative to the --mode-css-dest)
    '--cx, --css-example'         :   '',             #Whether to render an example HTML document                            [default: false]
    '--css-example-template'      :   '',             #HTML document Mustache template (relative to svg-sprite basedir)      [default: "tmpl/css/sprite.html"]
    '--css-example-dest'          :   '',             #HTML document destination (relative to the --mode-css-dest)           [default: "sprite.css.html"]
    '--view'                      :   '',             #Activates the «view» mode                                             [default: false]
    '--view-dest'                 :   '',             #Mode specific output directory                                        [default: "view"]
    '--vl, --view-layout'         :   '',             #Sprite layout ("vertical"/"horizontal"/"diagonal"/"packed")           [default: "packed"]
    '--view-common'               :   '',             #Common CSS rule selector for all shapes                               [default: null]
    '--view-mixin'                :   '',             #Preprocessor mixin name with properties for all shapes                [default: null]
    '--view-prefix'               :   '',             #CSS selector prefix for all shapes (including placeholders)           [default: ".svg-%s"]
    '--view-dimensions'           :   '',             #CSS selector suffix for shape dimension rules ("" for inline)         [default: "-dims"]
    '--vs, --view-sprite'         :   '',             #Sprite path and filename (relative to --mode-css-dest)                [default: "svg/sprite.css.svg"]
    '--view-bust'                 :   '',             #Enable cache busting                                                  [default: true]
    '--vcss, --view-render-css'   :   '',             #Whether to render a CSS stylesheet                                    [default: false]
    '--view-render-css-template'  :   '',             #CSS stylesheet Mustache template (relative to svg-sprite basedir)     [default: "tmpl/css/sprite.css"]
    '--view-render-css-dest'      :   '',             #CSS stylesheet destination (relative to the --mode-css-dest)          [default: "sprite.css"]
    '--vscss, --view-render-scss' :   '',             #Whether to render a Sass stylesheet (SCSS)                            [default: false]
    '--view-render-scss-template' :   '',             #Sass stylesheet Mustache template (relative to svg-sprite basedir)    [default: "tmpl/css/sprite.scss"]
    '--view-render-scss-dest'     :   '',             #Sass stylesheet destination (relative to the --mode-css-dest)         [default: "sprite.scss"]
    '--vless, --view-render-less' :   '',             #Whether to render a LESS stylesheet                                   [default: false]
    '--view-render-less-template' :   '',             #LESS stylesheet Mustache template (relative to svg-sprite basedir)    [default: "tmpl/css/sprite.less"]
    '--view-render-less-dest'     :   '',             #LESS stylesheet destination (relative to the --mode-css-dest)         [default: "sprite.less"]
    '--vstyl, --view-render-styl' :   '',             #Whether to render a Stylus stylesheet                                 [default: false]
    '--view-render-styl-template' :   '',             #Stylus stylesheet Mustache template (relative to svg-sprite basedir)  [default: "tmpl/css/sprite.styl"]
    '--view-render-styl-dest'     :   '',             #styl stylesheet destination (relative to the --mode-css-dest)         [default: "sprite.styl"]
    '--view-render-*'             :   '',             #Custom output renderings
    '--view-render-*-template'    :   '',             #Custom output Mustache template (relative to svg-sprite basedir)
    '--view-render-*-dest'        :   '',             #Custom output destination (relative to the --mode-css-dest)
    '--vx, --view-example'        :   '',             #Whether to render an example HTML document                            [default: false]
    '--view-example-template'     :   '',             #HTML document Mustache template (relative to svg-sprite basedir)      [default: "tmpl/view/sprite.html"]
    '--view-example-dest'         :   '',             #HTML document destination (relative to the --mode-css-dest)           [default: "sprite.view.html"]
    '--defs'                      :   '',             #Activates the «defs» mode                                             [default: false]
    '--defs-dest'                 :   '',             #Mode specific output directory                                        [default: "defs"]
    '--defs-prefix'               :   '',             #CSS selector prefix for all shapes (including placeholders)           [default: ".svg-%s"]
    '--defs-dimensions'           :   '',             #CSS selector suffix for shape dimension rules ("" for inline)         [default: "-dims"]
    '--ds, --defs-sprite'         :   '',             #Sprite path and filename (relative to --mode-css-dest)                [default: "svg/sprite.css.svg"]
    '--defs-bust'                 :   '',             #Enable cache busting                                                  [default: false]
    '--di, --defs-inline'         :   '',             #Create sprite variant suitable for inline embedding                   [default: false]
    '--dx, --defs-example'        :   '',             #Whether to render an example HTML document                            [default: false]
    '--defs-example-template'     :   '',             #HTML document Mustache template (relative to svg-sprite basedir)      [default: "tmpl/defs/sprite.html"]
    '--defs-example-dest'         :   '',             #HTML document destination (relative to the --mode-css-dest)           [default: "sprite.defs.html"]
    '--symbol'                    :   '',             #Activates the «symbol» mode                                           [default: false]
    '--symbol-dest'               :   '',             #Mode specific output directory                                        [default: "symbol"]
    '--symbol-prefix'             :   '',             #CSS selector prefix for all shapes (including placeholders)           [default: ".svg-%s"]
    '--symbol-dimensions'         :   '',             #CSS selector suffix for shape dimension rules ("" for inline)         [default: "-dims"]
    '--ss, --symbol-sprite'       :   '',             #Sprite path and filename (relative to --mode-css-dest)                [default: "svg/sprite.css.svg"]
    '--symbol-bust'               :   '',             #Enable cache busting                                                  [default: false]
    '--si, --symbol-inline'       :   '',             #Create sprite variant suitable for inline embedding                   [default: false]
    '--sx, --symbol-example'      :   '',             #Whether to render an example HTML document                            [default: false]
    '--symbol-example-template'   :   '',             #HTML document Mustache template (relative to svg-sprite basedir)      [default: "tmpl/symbol/sprite.html"]
    '--symbol-example-dest'       :   '',             #HTML document destination (relative to the --mode-css-dest)           [default: "sprite.symbol.html"]
    '--stack'                     :   '',             #Activates the «stack» mode                                            [default: false]
    '--stack-dest'                :   '',             #Mode specific output directory                                        [default: "stack"]
    '--stack-prefix'              :   '',             #CSS selector prefix for all shapes (including placeholders)           [default: ".svg-%s"]
    '--stack-dimensions'          :   '',             #CSS selector suffix for shape dimension rules ("" for inline)         [default: "-dims"]
    '--Ss, --stack-sprite'        :   '',             #Sprite path and filename (relative to --mode-css-dest)                [default: "svg/sprite.css.svg"]
    '--stack-bust'                :   '',             #Enable cache busting                                                  [default: false]
    '--Sx, --stack-example'       :   '',             #Whether to render an example HTML document                            [default: false]
    '--stack-example-template'    :   '',             #HTML document Mustache template (relative to svg-sprite basedir)      [default: "tmpl/stack/sprite.html"]
    '--stack-example-dest'        :   '',             #HTML document destination (relative to the --mode-css-dest)           [default: "sprite.stack.html"]
    '--variables'                 :   '',             #Path to external JSON file with Mustache variable definitions

}